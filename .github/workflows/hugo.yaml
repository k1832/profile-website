name: Build and deploy
on:
  push:
    branches:
      - main
  workflow_dispatch:
permissions:
  contents: read
  pages: write
  id-token: write
concurrency:
  group: pages
  cancel-in-progress: false
defaults:
  run:
    shell: bash
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      DART_SASS_VERSION: 1.92.1
      GO_VERSION: 1.25.1
      HUGO_VERSION: 0.150.0
      NODE_VERSION: 22.18.0
      TZ: Europe/Oslo
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          submodules: recursive
          fetch-depth: 0
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5
      - name: Cache Hugo
        id: cache-hugo
        uses: actions/cache@v4
        with:
          path: ~/.local/bin/hugo
          key: ${{ runner.os }}-hugo-${{ env.HUGO_VERSION }}
      - name: Install Hugo
        if: steps.cache-hugo.outputs.cache-hit != 'true'
        run: |
          mkdir -p ~/.local/bin
          curl -sLJO "https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.tar.gz"
          tar -C ~/.local/bin -xf "hugo_extended_${HUGO_VERSION}_linux-amd64.tar.gz" hugo
          rm "hugo_extended_${HUGO_VERSION}_linux-amd64.tar.gz"
          echo "$HOME/.local/bin" >> "$GITHUB_PATH"
      - name: Cache Dart Sass
        id: cache-dart-sass
        uses: actions/cache@v4
        with:
          path: ~/.local/dart-sass
          key: ${{ runner.os }}-dart-sass-${{ env.DART_SASS_VERSION }}
      - name: Install Dart Sass
        if: steps.cache-dart-sass.outputs.cache-hit != 'true'
        run: |
          mkdir -p ~/.local
          curl -sLJO "https://github.com/sass/dart-sass/releases/download/${DART_SASS_VERSION}/dart-sass-${DART_SASS_VERSION}-linux-x64.tar.gz"
          tar -C ~/.local -xf "dart-sass-${DART_SASS_VERSION}-linux-x64.tar.gz"
          rm "dart-sass-${DART_SASS_VERSION}-linux-x64.tar.gz"
          echo "$HOME/.local/dart-sass" >> "$GITHUB_PATH"
      - name: Add installed binaries to PATH
        run: |
          echo "$HOME/.local/bin" >> "$GITHUB_PATH"
          echo "$HOME/.local/dart-sass" >> "$GITHUB_PATH"
      - name: Verify installations
        run: |
          echo "Dart Sass: $(sass --version)"
          echo "Go: $(go version)"
          echo "Hugo: $(hugo version)"
          echo "Node.js: $(node --version)"
      - name: Cache Hugo build output
        uses: actions/cache@v4
        with:
          path: .hugo_build.lock
          key: ${{ runner.os }}-hugobuild-${{ hashFiles('**/go.sum', '**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-hugobuild-
      - name: Build the site
        run: |
          hugo \
            --gc \
            --minify \
            --baseURL "${{ steps.pages.outputs.base_url }}/"
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
